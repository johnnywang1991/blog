<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"
  xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
  <channel>
    <title>呵呵</title>
    <link>http://addcp.com</link>
    <description>呵呵</description>
    <pubDate>Wed, 25 Dec 2013 00:00:00 +0800</pubDate>
    <item>
      <title>入手iP5s</title>
      <link>http://addcp.com/2013/12/ip5s.html</link>
      <description>&lt;p&gt;在接近2013年末的时候，终于把手机换成了智能机，一下心情好了不少。&lt;/p&gt;
</description>
      <pubDate>Wed, 25 Dec 2013 00:00:00 +0800</pubDate>
      <guid>http://addcp.com/2013/12/ip5s.html</guid>
      <dc:date>2013-12-25T00:00:00+08:00</dc:date>
    </item>
    <item>
      <title>关于git reset的风险</title>
      <link>http://addcp.com/2013/11/git-abuse.html</link>
      <description>&lt;p&gt;在使用&lt;code&gt;git pull origin master&lt;/code&gt;更新代码的时候有时会遇到有冲突无法合并的情况，而又知道在remote端的代码是对的，只要覆盖掉本地的代码就好了。&lt;/p&gt;
</description>
      <pubDate>Fri, 22 Nov 2013 00:00:00 +0800</pubDate>
      <guid>http://addcp.com/2013/11/git-abuse.html</guid>
      <dc:date>2013-11-22T00:00:00+08:00</dc:date>
    </item>
    <item>
      <title>爬虫的url去重</title>
      <link>http://addcp.com/2013/11/perl-crawler-duplicate-remove.html</link>
      <description>&lt;p&gt;最近用Perl写了一些爬虫，没想到在url去重的问题上碰了钉子。&lt;/p&gt;
</description>
      <pubDate>Sat, 02 Nov 2013 00:00:00 +0800</pubDate>
      <guid>http://addcp.com/2013/11/perl-crawler-duplicate-remove.html</guid>
      <dc:date>2013-11-02T00:00:00+08:00</dc:date>
    </item>
    <item>
      <title>用git rebase合并commit</title>
      <link>http://addcp.com/2013/09/git-rebase.html</link>
      <description>&lt;p&gt;最近时常用git来作版本控制和代码提交，渐渐发现了git rebase的用法和好处&lt;/p&gt;

&lt;p&gt;尤其在整理与合并git的提交记录时，git rebase使用起来十分灵活&lt;/p&gt;

&lt;h3&gt;使用情景&lt;/h3&gt;

&lt;p&gt;进行一次提交之后，马上发现代码里可能有一两行需要改动，更改之后再次提交，然后又觉得哪里不妥。。。&lt;/p&gt;

&lt;p&gt;<div class="highlight"><pre><code class="shell-session"><span class="gp">[root@addcp gitdemo]#</span> vim test.txt
<span class="gp">[root@addcp gitdemo]#</span> git commit -am <span class="p">&amp;</span>amp<span class="p">;</span><span class="c">#39;add test.txt&amp;amp;#39;</span>
<span class="go">发现一些代码需要小改动</span>
<span class="gp">[root@addcp gitdemo]#</span> vim test.txt
<span class="gp">[root@addcp gitdemo]#</span> git commit -am <span class="p">&amp;</span>amp<span class="p">;</span><span class="c">#39;update test.txt&amp;amp;#39;</span>
<span class="go">...</span>
<span class="go">...</span>
<span class="go">第N次发现</span>
<span class="gp">[root@addcp gitdemo]#</span> vim test.txt
<span class="gp">[root@addcp gitdemo]#</span> git commit -am <span class="p">&amp;</span>amp<span class="p">;</span><span class="c">#39;update test.txt again and again&amp;amp;#39;</span>
<span class="go">...</span>
</code></pre></div>&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h3&gt;问题重现&lt;/h3&gt;

&lt;p&gt;这样多次之后，git的commit记录就会变得很乱，一堆小改动，却占用了很多次提交记录：&lt;/p&gt;

&lt;p&gt;<div class="highlight"><pre><code class="shell-session"><span class="gp">[root@addcp gitdemo]#</span> git log
<span class="go">commit abe26fe0f5b1788e8f7b1949082e1477c5337aa0</span>
<span class="go">Author: xiaocang &amp;lt;a href=&amp;quot;mailto:xiaocang@addcp.com&amp;quot;&amp;gt;xiaocang@addcp.com&amp;lt;/a&amp;gt;</span>
<span class="go">Date:   Sat Sep 7 01:29:48 2013 +0800&amp;lt;/p&amp;gt;</span>
<span class="go">&amp;lt;div class=&amp;quot;highlight&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;code class=&amp;quot;text language-text&amp;quot; data-lang=&amp;quot;text&amp;quot;&amp;gt;update test.txt again and again</span>
<span class="go">&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;</span>
<span class="go">&amp;lt;p&amp;gt;commit c3633d5153bacabeceaeaeb552484e7f9b6a2b9c</span>
<span class="go">Author: xiaocang &amp;lt;a href=&amp;quot;mailto:xiaocang@addcp.com&amp;quot;&amp;gt;xiaocang@addcp.com&amp;lt;/a&amp;gt;</span>
<span class="go">Date:   Sat Sep 7 01:29:21 2013 +0800&amp;lt;/p&amp;gt;</span>
<span class="go">&amp;lt;div class=&amp;quot;highlight&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;code class=&amp;quot;text language-text&amp;quot; data-lang=&amp;quot;text&amp;quot;&amp;gt;update test.txt again</span>
<span class="go">&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;</span>
<span class="go">&amp;lt;p&amp;gt;commit c8bc032daac7d0859a0e73cd83a464cee0f59625</span>
<span class="go">Author: xiaocang &amp;lt;a href=&amp;quot;mailto:xiaocang@addcp.com&amp;quot;&amp;gt;xiaocang@addcp.com&amp;lt;/a&amp;gt;</span>
<span class="go">Date:   Sat Sep 7 01:28:51 2013 +0800&amp;lt;/p&amp;gt;</span>
<span class="go">&amp;lt;div class=&amp;quot;highlight&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;code class=&amp;quot;text language-text&amp;quot; data-lang=&amp;quot;text&amp;quot;&amp;gt;update test.txt</span>
<span class="go">&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;</span>
<span class="go">&amp;lt;p&amp;gt;commit 0e80061e90503189dd7f189297aed809953e5e8b</span>
<span class="go">Author: xiaocang &amp;lt;a href=&amp;quot;mailto:xiaocang@addcp.com&amp;quot;&amp;gt;xiaocang@addcp.com&amp;lt;/a&amp;gt;</span>
<span class="go">Date:   Sat Sep 7 01:28:22 2013 +0800&amp;lt;/p&amp;gt;</span>
<span class="go">&amp;lt;div class=&amp;quot;highlight&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;code class=&amp;quot;text language-text&amp;quot; data-lang=&amp;quot;text&amp;quot;&amp;gt;add test.txt</span>
<span class="go">&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;</span>
<span class="go">&amp;lt;p&amp;gt;......</span>
</code></pre></div>&lt;/p&gt;

&lt;h3&gt;rebase 示例及用法&lt;/h3&gt;

&lt;p&gt;这时如果使用git rebase来解决这个问题就非常容易了&lt;/p&gt;

&lt;p&gt;git rebase语法是这样的&lt;/p&gt;

&lt;p&gt;<div class="highlight"><pre><code class="shell-session"><span class="go">git rebase [--interactive | -i] [-v] [--force-rebase | -f] [--no-ff] [--onto &amp;lt;newbase&amp;gt;] [&amp;lt;upstream&amp;gt;|--root] [&amp;lt;branch&amp;gt;] [--quiet | -q]</span>
</code></pre></div>&lt;/p&gt;

&lt;p&gt;这里我们使用到的是&lt;code&gt;-i&lt;/code&gt;选项，也就是交互的rebase&lt;/p&gt;

&lt;p&gt;<div class="highlight"><pre><code class="shell-session"><span class="gp">[root@addcp gitdemo]#</span> git -i HEAD~3
</code></pre></div>&lt;/p&gt;

&lt;p&gt;其中&lt;code&gt;HEAD~3&lt;/code&gt;是该分支的前三次提交。也可以在后面加&lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt;的参数指定要衍合的分支。&lt;/p&gt;

&lt;p&gt;<div class="highlight"><pre><code class="bash">pick c8bc032 update test.txt
f c3633d5 update test.txt again
f abe26fe update test.txt again and again<span class="p">&amp;</span>lt<span class="p">;</span>/p<span class="p">&amp;</span>gt<span class="p">;</span>

<span class="p">&amp;</span>lt<span class="p">;</span>h1<span class="p">&amp;</span>gt<span class="p">;</span>Rebase 0e80061..abe26fe onto 0e80061<span class="p">&amp;</span>lt<span class="p">;</span>/h1<span class="p">&amp;</span>gt<span class="p">;</span>

<span class="p">&amp;</span>lt<span class="p">;</span>h1<span class="p">&amp;</span>gt<span class="p">;</span>Commands:<span class="p">&amp;</span>lt<span class="p">;</span>/h1<span class="p">&amp;</span>gt<span class="p">;</span>

<span class="p">&amp;</span>lt<span class="p">;</span>h1<span class="p">&amp;</span>gt<span class="p">;</span>p, <span class="nv">pick</span> <span class="o">=</span> use commit<span class="p">&amp;</span>lt<span class="p">;</span>/h1<span class="p">&amp;</span>gt<span class="p">;</span>

<span class="p">&amp;</span>lt<span class="p">;</span>h1<span class="p">&amp;</span>gt<span class="p">;</span>r, <span class="nv">reword</span> <span class="o">=</span> use commit, but edit the commit message<span class="p">&amp;</span>lt<span class="p">;</span>/h1<span class="p">&amp;</span>gt<span class="p">;</span>

<span class="p">&amp;</span>lt<span class="p">;</span>h1<span class="p">&amp;</span>gt<span class="p">;</span>e, <span class="nv">edit</span> <span class="o">=</span> use commit, but stop <span class="k">for </span>amending<span class="p">&amp;</span>lt<span class="p">;</span>/h1<span class="p">&amp;</span>gt<span class="p">;</span>

<span class="p">&amp;</span>lt<span class="p">;</span>h1<span class="p">&amp;</span>gt<span class="p">;</span>s, <span class="nv">squash</span> <span class="o">=</span> use commit, but meld into previous commit<span class="p">&amp;</span>lt<span class="p">;</span>/h1<span class="p">&amp;</span>gt<span class="p">;</span>

<span class="p">&amp;</span>lt<span class="p">;</span>h1<span class="p">&amp;</span>gt<span class="p">;</span>f, <span class="nv">fixup</span> <span class="o">=</span> like <span class="p">&amp;</span>amp<span class="p">;</span>quot<span class="p">;</span>squash<span class="p">&amp;</span>amp<span class="p">;</span>quot<span class="p">;</span>, but discard this commit<span class="p">&amp;</span>amp<span class="p">;</span><span class="c">#39;s log message&amp;lt;/h1&amp;gt;</span>

<span class="p">&amp;</span>lt<span class="p">;</span>h1<span class="p">&amp;</span>gt<span class="p">;</span>If you remove a line here THAT COMMIT WILL BE LOST.<span class="p">&amp;</span>lt<span class="p">;</span>/h1<span class="p">&amp;</span>gt<span class="p">;</span>

<span class="p">&amp;</span>lt<span class="p">;</span>h1<span class="p">&amp;</span>gt<span class="p">;</span>However, <span class="k">if </span>you remove everything, the rebase will be aborted.<span class="p">&amp;</span>lt<span class="p">;</span>/h1<span class="p">&amp;</span>gt<span class="p">;</span>

<span class="p">&amp;</span>lt<span class="p">;</span>p<span class="p">&amp;</span>gt<span class="p">;</span>
</code></pre></div>&lt;/p&gt;

&lt;p&gt;其中，&lt;code&gt;pick&lt;/code&gt;是将该次提交原样提交&lt;/p&gt;

&lt;p&gt;&lt;code&gt;reword&lt;/code&gt;也是提交，不过在提交之前会让你再次修改该次提交日志&lt;/p&gt;

&lt;p&gt;&lt;code&gt;edit&lt;/code&gt;和reword差不多，但是在修改提交日志后，会等待你再次&lt;code&gt;git commit --amend&lt;/code&gt;，也就是等待你追加一些需要提交的文件与改动。之后再使用&lt;code&gt;git rebase --continue&lt;/code&gt;完成整个rebase&lt;/p&gt;

&lt;p&gt;&lt;code&gt;squash&lt;/code&gt;是将该次提交合并到前一次提交里，但会将这次提交的日志内容合并到上一次里&lt;/p&gt;

&lt;p&gt;&lt;code&gt;fixup&lt;/code&gt;则和&lt;code&gt;squash&lt;/code&gt;不同，它会自动忽略此次日志的内容。这正是我此次commit整理中需要的&lt;/p&gt;

&lt;h3&gt;rebase成果&lt;/h3&gt;

&lt;p&gt;如上，我就会得到一个这样的日志：&lt;/p&gt;

&lt;p&gt;<div class="highlight"><pre><code class="shell-session"><span class="gp">[root@addcp gitdemo]#</span> git log
<span class="go">commit 3e5d79d149942f7dc0741a9a42ce43d98beafcd3</span>
<span class="go">Author: xiaocang &amp;lt;a href=&amp;quot;mailto:xiaocang@addcp.com&amp;quot;&amp;gt;xiaocang@addcp.com&amp;lt;/a&amp;gt;</span>
<span class="go">Date:   Sat Sep 7 01:28:51 2013 +0800&amp;lt;/p&amp;gt;</span>
<span class="go">&amp;lt;div class=&amp;quot;highlight&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;code class=&amp;quot;text language-text&amp;quot; data-lang=&amp;quot;text&amp;quot;&amp;gt;update test.txt</span>
<span class="go">&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;</span>
<span class="go">&amp;lt;p&amp;gt;commit 0e80061e90503189dd7f189297aed809953e5e8b</span>
<span class="go">Author: xiaocang &amp;lt;a href=&amp;quot;mailto:xiaocang@addcp.com&amp;quot;&amp;gt;xiaocang@addcp.com&amp;lt;/a&amp;gt;</span>
<span class="go">Date:   Sat Sep 7 01:28:22 2013 +0800&amp;lt;/p&amp;gt;</span>
<span class="go">&amp;lt;div class=&amp;quot;highlight&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;code class=&amp;quot;text language-text&amp;quot; data-lang=&amp;quot;text&amp;quot;&amp;gt;add test.txt</span>
<span class="go">&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;</span>
<span class="go">&amp;lt;p&amp;gt;</span>
</code></pre></div>&lt;/p&gt;

&lt;p&gt;这样整个世界就都清净了&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;如果看过git的官方文档的人都应该知道&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;不要对任何已上线的部分使用衍合&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;因为这样对线上的提交纪录进行改变，对一个多人协作的项目来说，是不好的。&lt;/p&gt;

&lt;p&gt;项目中的其他人会因此感到困惑，因为本来存在的一个提交纪录突然不见了&lt;/p&gt;

&lt;p&gt;所以衍合主要是在提交到线上之前进行commit合并，使提交纪录变得干净的方法&lt;/p&gt;
</description>
      <pubDate>Sat, 07 Sep 2013 00:00:00 +0800</pubDate>
      <guid>http://addcp.com/2013/09/git-rebase.html</guid>
      <dc:date>2013-09-07T00:00:00+08:00</dc:date>
    </item>
    <item>
      <title>←一个每年都换域名的博客</title>
      <link>http://addcp.com/2013/09/about-blog.html</link>
      <description>&lt;p&gt;这是一个每年都换域名的博客。。。（我干嘛说出来）&lt;/p&gt;

&lt;p&gt;然后打算暂定这个域名&lt;a href=&quot;http://addcp.com&quot;&gt;addcp.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;写一些感想瞎想和技术文&lt;/p&gt;
</description>
      <pubDate>Wed, 04 Sep 2013 00:00:00 +0800</pubDate>
      <guid>http://addcp.com/2013/09/about-blog.html</guid>
      <dc:date>2013-09-04T00:00:00+08:00</dc:date>
    </item>
    <item>
      <title>开学</title>
      <link>http://addcp.com/2013/09/school-opens.html</link>
      <description>&lt;p&gt;9月1日是一年一度大中小学开学的日子&lt;/p&gt;

&lt;p&gt;往年都会因为假期结束而有点小伤感&lt;/p&gt;

&lt;p&gt;今年刚刚毕业的我还是会有点小伤感虽然不知道为什么&lt;/p&gt;
</description>
      <pubDate>Sun, 01 Sep 2013 00:00:00 +0800</pubDate>
      <guid>http://addcp.com/2013/09/school-opens.html</guid>
      <dc:date>2013-09-01T00:00:00+08:00</dc:date>
    </item>
    <item>
      <title>在Jekyll中使用截断输出</title>
      <link>http://addcp.com/2013/04/jekyll-excerpt.html</link>
      <description>&lt;p&gt;因为之前一直用的是&lt;a href=&quot;http://wordpress.org&quot;&gt;WordPress&lt;/a&gt;，转到Jekyll后自然的就想去找一个可以识别&lt;code&gt;&amp;lt;!-- more --&amp;gt;&lt;/code&gt;来截断输出的方法&lt;/p&gt;

&lt;h3&gt;插件&lt;/h3&gt;

&lt;p&gt;Goolge了一下，果然很快就找到相关插件：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href=&quot;https://github.com/sebcioz/jekyll-only_first_p&quot;&gt;&lt;code&gt;jekyll-only_first_p&lt;/code&gt;&lt;/a&gt;：可以只输出第一段的插件(&lt;em&gt;需要&lt;a href=&quot;http://nokogiri.org/&quot;&gt;Nokogiri&lt;/a&gt;支持&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;  &lt;a href=&quot;https://gist.github.com/stympy/986665&quot;&gt;&lt;code&gt;excerpt.rb&lt;/code&gt;&lt;/a&gt;：可以识别&lt;code&gt;&amp;lt;!-- more --&amp;gt;&lt;/code&gt;的插件&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;不过如果你的Jekyll也是托管在Github上的话，那么就不能用插件的方法了。
出于安全考虑，Github在运行Jekyll的时候用了&lt;code&gt;--safe&lt;/code&gt;的参数，第三方插件通通无效。&lt;/p&gt;

&lt;h3&gt;Liquid&lt;/h3&gt;

&lt;p&gt;正当我有点小失望的时候，找到了这篇文章：&lt;a href=&quot;http://foldl.me/2012/jekyll-excerpts/&quot;&gt;Post excerpts in Jekyll&lt;/a&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;只要利用Liquid模板语言中的一个filter就可以实现：&lt;/p&gt;

&lt;p&gt;

  <pre><code>{{ post.content | split: &amp;#39;&amp;lt;!-- more --&amp;gt;&amp;#39; | first }}</code></pre>


&lt;/p&gt;

&lt;p&gt;然后在截断的文章后加上&lt;code&gt;阅读全文&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;#more&amp;quot;&amp;gt;阅读全文 →&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样，即使是托管在Github上的Jekyll也能截断输出了。&lt;/p&gt;
</description>
      <pubDate>Thu, 11 Apr 2013 00:00:00 +0800</pubDate>
      <guid>http://addcp.com/2013/04/jekyll-excerpt.html</guid>
      <dc:date>2013-04-11T00:00:00+08:00</dc:date>
    </item>
    <dc:date>2013-12-25T00:00:00+08:00</dc:date>
  </channel>
</rss>